/*You are given a sorted(ascending order) list which may or may not contain duplicate elements. 
Your task is to remove the duplicacy from the list. So basically if two 4's are present in the list 
then you have to modify the list such that only one 4 should be there. 

Example
Input
2
5
1 2 3 3 4
7
4 4 5 6 6 7 8

Output
1 2 3 4
4 5 6 7 8*/

#include <stdio.h>
#include <stdlib.h>
struct Node 
{ 
  int data; 
  struct Node *next; 
}; 
void del(struct Node*curr,int n){
   while(curr->next !=NULL){
  if(curr->data!=curr->next->data){
    curr=curr->next;
  }
  else
  {
    struct Node *temp=curr->next;
    curr->next=curr->next->next;
    free(temp);
  }
   }
}
void append(struct Node** head_ref, int new_data) 
{ 
    struct Node* new_node = (struct Node*) malloc(sizeof(struct Node)); 
  
    struct Node *last = *head_ref;  
  
  
    new_node->data  = new_data; 
  
   
    new_node->next = NULL; 
  
    
    if (*head_ref == NULL) 
    { 
       *head_ref = new_node; 
       return; 
    } 
  
    while (last->next != NULL) 
        last = last->next; 
  
    
    last->next = new_node; 
    return; 
} 
void printList(struct Node *node) 
{ 
  while (node != NULL) 
  { 
     printf("%d ", node->data); 
     node = node->next; 
  } 
} 
  int main()
  {
    int t;
    scanf("%d",&t);
    while(t--){
      int n;
      scanf("%d",&n);
      struct Node *head=NULL;
      for(int i=0;i<n;i++){
        int new_data;
        scanf("%d",&new_data);
        append(&head,new_data);
      }
      del(head,n);
     printList(head);
     printf("\n");
    }
    return 0;
  }

